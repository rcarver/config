#!/bin/bash

# This script builds a sample config project.

: ${project_dir?}
: ${project_repo_dir?}
: ${database_repo_dir?}
: ${config_dir?}
: ${rbenv_version?}
: ${fixtures_dir?}

cd $project_dir

# Ensure we are using the right version of ruby.
rbenv local $rbenv_version

# Initialize directory.
git init
bundle init

# Install dependencies
echo "gem 'config', :path => '$config_dir'" >> Gemfile
echo "gem 'vagrant'" >> Gemfile
bundle install --binstubs --local

# Check in and push to git origin.
git add .
git commit -m 'initial comit'
git remote add origin $project_repo_dir
git push -u origin master

# Initialize config.
bin/config-init-project

git add .
git commit -m 'initialize config'

# Store a secret.
echo 'shhhhh' | bin/config-store-secret

# Patch config.rb so that the database repo is correct. We create better
# defaults when it's a remote repo so we'll deal with this annoyance for
# now. In reality it's normal for users to edit config.rb so this isn't
# the worst thing.
echo '
8c8
<   url: "/tmp/config-test-project-repo"
---
>   url: "/tmp/config-test-database-repo"
' | patch --force config.rb -

git add config.rb
git commit -m 'set database repo'

# Create the default vagrant blueprint.
bin/config-create-blueprint devbox
git add blueprints
git commit -m 'create devbox blueprint'

# Create the default vagrant cluster.
bin/config-create-cluster vagrant
git add clusters
git commit -m 'create vagrant cluster'

# Add more patterns for testing.
$script_dir/add-fixture roundup
$script_dir/add-fixture streaming
$script_dir/add-fixture stat

# Test that we can create a bootstrap script before firing up Vagrant.
bin/config-create-bootstrap vagrant devbox 1 > /dev/null

# Initialize Vagrant.
(
cat <<-STR
require "config/vagrant/provisioner"
Vagrant::Config.run do |config|
  config.vm.box = "base"
  config.vm.share_folder "config-code", "$config_dir", "$config_dir"
  config.vm.share_folder "project-repo", "$project_repo_dir", "$project_repo_dir"
  config.vm.share_folder "database-repo", "$database_repo_dir", "$database_repo_dir"
  config.vm.provision Config::Vagrant::Provisioner
end
STR
) > Vagrantfile

git add Vagrantfile
git commit -m 'add Vagrantfile'
git push
